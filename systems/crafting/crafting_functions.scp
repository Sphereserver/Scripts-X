//****************************************************************************
// SphereServer by: SphereServer development team and Menasoft.
// www.sphereserver.net
//****************************************************************************
VERSION=X1
//
// SCRIPT CREDITS
// --------------
// pyromapes2k - Base crafting system used in here
// coruja - Updated to be more OSI compatible
// ShiryuX - Updated to the scriptpack and tweaked many parts of it
// Raylde - Update for work with dynamic configuration instead of create new ITEMDEF for each craftable item
//
// SCRIPT DOCUMENTATION
// --------------------
// OSI Crafting System

[FUNCTION f_craftskill]
IF STRCMP("<ARGV[0]>","<ctag.craft.SKILL>")
   ctag.craft.last
   ctag.craft.PAGE.sidebar
   ctag.craft.sidebar = 01
ENDIF
ctag.craft.SKILL=<ARGV[0]>
IF !(<ctag0.craft.mark>) && (<def0.<ctag0.craft.SKILL>_marking>)
   ctag.craft.mark=1 //mark option from default
ENDIF
f_resenddialog d_craft_menu


[FUNCTION f_craft]
//<args> = Item ID need to be craft
local.recipe = <getargv 3 <ctag0.craft.ITEM.options>>
IF <local.recipe> == 1
   IF !<TAG0.recipe.<SERV.ITEMDEF.<ctag0.craft.ITEM>.BASEID>>
      ctag.craft.MESSAGE = <DEF.scp.craft_msg_norecipe>
      f_resenddialog d_craft_menu
      RETURN 1
   ENDIF
ENDIF
IF <ACCOUNT.resdisp> < <getargv 4 <ctag0.craft.ITEM.options>>
   ctag.craft.MESSAGE = <DEF.scp.craft_msg_noexpansion>
   f_resenddialog d_craft_menu
   RETURN 1
ENDIF

// if the first material is different from base, then we need to use MATOVERRIDE
//TODO: need to clean this matoverride stuff
IF (<DEF.<ctag0.craft.SKILL>_material_<dctag.craft.material.<ctag.craft.SKILL>>_resourceid> != <SERV.ITEMDEF.<ARGS>.RESOURCES.1.KEY.NAME>)
    TAG.MATOVERRIDE_<DEF.<ctag0.craft.SKILL>_resourceid> = <DEF.<ctag0.craft.SKILL>_material_<dctag.craft.material.<ctag.craft.SKILL>>_resourceid>
ENDIF

IF !<canmakeskill <ARGS>>
   ctag.craft.MESSAGE = <DEF.scp.craft_msg_noskill>
   f_resenddialog d_craft_menu
   RETURN 1
elif !<canmake  <ARGS>>
   ctag.craft.MESSAGE = <DEF.scp.craft_msg_noresources>
   f_resenddialog d_craft_menu
   RETURN 1
elif !<isempty <DEF.<ctag0.craft.SKILL>_check>>
   IF (<<DEF.<ctag0.craft.SKILL>_check> <ARGS>>)
      f_resenddialog d_craft_menu
      RETURN 1
   ENDIF
ENDIF
MAKEITEM <ARGS>
f_craftsuccesschance <ARGS>
ctag.craft.MESSAGE = "Creating <SERV.ITEMDEF.<ARGS>.NAME>..."
ctag.craft.last.<ctag0.craft.SKILL> = <ARGS>
IF !STRCMPI("COOKING","<ctag0.craft.SKILL>")
   timerf <EVAL <SERV.SKILL.13.delay>/10>,craftcooking <ARGS>,<actdiff> // Cooking Fix
ENDIF
LOCAL.NewLastTen=<ARGS>
FOR 0 9
   LOCAL.TempItem=<getargv <LOCAL._for> <TAG0.craft.lastTen.<ctag0.craft.SKILL>>>
   IF (<LOCAL.TempItem>) && !(STRMATCH(*<LOCAL.TempItem>*,<LOCAL.NewLastTen>))
      LOCAL.NewLastTen=<LOCAL.NewLastTen>,<LOCAL.TempItem>
   ENDIF
ENDFOR


[FUNCTION f_craftcooking]
IF (<canmake <ARGV[0]>>) && (<ARGV[1]> > 0)
   SERV.NEWITEM <ARGV[0]>
   CONSUME <NEW.RESOURCES>
   NEW.BOUNCE
   ctag.craft.MESSAGE = <DEF.scp.craft_msg_success>
   skillgain COOKING <r2>
ELSE
   ctag.craft.MESSAGE = <DEF.scp.craft_msg_fail>
ENDIF
f_craftskill COOKING

[FUNCTION f_canmake]
//<args> = Item ID need to be craft
FOR 1 <SERV.ITEMDEF.<ARGS>.RESOURCES.COUNT>
	// set the resource_name we can use to check the resource
	LOCAL.RESOURCE_NAME=<SERV.ITEMDEF.<ARGS>.RESOURCES.<dlocal._for>.KEY.NAME>

	//if is different from base, then we need to check the resource
    IF (<DEF.<ctag0.craft.SKILL>_resourceid> == <SERV.ITEMDEF.<ARGS>.RESOURCES.<dlocal._for>.KEY>)
        IF (<dctag.craft.material.<ctag.craft.SKILL>> != 0)
            IF (!<ISEMPTY <DEF.<ctag0.craft.SKILL>_material_<dctag.craft.material.<ctag.craft.SKILL>>_resourceid>> && <DEF.<ctag0.craft.SKILL>_material_<dctag.craft.material.<ctag.craft.SKILL>>_resourceid> != <LOCAL.RESOURCE_NAME> )
                LOCAL.RESOURCE_NAME=<DEF.<ctag0.craft.SKILL>_material_<dctag.craft.material.<ctag.craft.SKILL>>_resourceid>
            ENDIF
        ENDIF
    ENDIF

	// check if we have the resource
	IF !(<RESTEST <SERV.ITEMDEF.<ARGS>.RESOURCES.<dlocal._for>.VALUE> <LOCAL.RESOURCE_NAME>>)
		RETURN 0
	ENDIF
ENDFOR
RETURN 1

[FUNCTION f_cancraft]
IF (STRMATCH("*t_masonry_tool*","<SERV.ITEMDEF.<ARGS>.SKILLMAKE>") && !(<TAG0.crafting.masonry>))
   RETURN 0
ENDIF
IF (STRMATCH("*t_glassblowing*","<SERV.ITEMDEF.<ARGS>.SKILLMAKE>") && !(<TAG0.crafting.glassblowing>))
   RETURN 0
ENDIF
IF !(<f_canmake <ARGS>>)
   RETURN 0
ENDIF
RETURN 1

[FUNCTION f_enhancesuccesschance]
IF (<SRC.Imbuing> >= <SERV.ITEMDEF.<ARGS>.SKILLMAKE.1.val>)
   LOCAL.R = <EVAL (<SRC.Imbuing>> - <SERV.ITEMDEF.<ARGS>.SKILLMAKE.1.VAL>) * 2>
   LOCAL.R += <DEF.<SERV.ITEMDEF.<ARGS>.SKILLMAKE.1.NAME>_CHANCEATMIN>
ENDIF
IF !(<ISITEM>)
   IF (<R1000> < <LOCAL.R>)
      ACTDIFF = 10
   ELSE
      ACTDIFF = -10
   ENDIF
   RETURN 1
ELSE
   IF <LOCAL.R> < 0
      LOCAL.R = 0
   ELIF <LOCAL.R> > 1000
      LOCAL.R = 1000
   ENDIF
   RETURN <LOCAL.R>
ENDIF

[FUNCTION f_craftsuccesschance]
IF (<SRC.<SERV.SKILL.<SERV.ITEMDEF.<ARGS>.SKILLMAKE.1.KEY>.KEY>> >= <SERV.ITEMDEF.<ARGS>.SKILLMAKE.1.val>)
   local.r = <EVAL (<SRC.<SERV.SKILL.<SERV.ITEMDEF.<ARGS>.SKILLMAKE.1.KEY>.KEY>> - <SERV.ITEMDEF.<ARGS>.SKILLMAKE.1.val>) * 2>
   local.r += <DEF.<SRC.ctag0.craft.SKILL>_chanceatmin>
ENDIF
IF !(<ISITEM>)
   IF (<r1000> < <local.r>)
      actdiff = 10
   ELSE
      actdiff = -10
   ENDIF
   RETURN 1
ELSE
   IF <local.r> < 0
      local.r = 0
   elif <local.r> > 1000
      local.r = 1000
   ENDIF
   RETURN <local.r>
ENDIF

[FUNCTION f_craft_exceptionalchance]
IF !(<getargv 1 <SRC.ctag0.craft.ITEM.options>>)
   RETURN 0
ENDIF
local.successchance = <EVAL (<SRC.<SERV.SKILL.<SERV.ITEMDEF.<BASEID>.SKILLMAKE.1.KEY>.KEY>> - <SERV.ITEMDEF.<BASEID>.SKILLMAKE.1.val>) * 2>
local.successchance += <DEF.<SRC.ctag0.craft.SKILL>_chanceatmin>
local.r = <EVAL <local.successchance> - 450>

IF <local.r> < 0
   local.r = 0
elif <local.r> > 1000
   local.r = 1000
ENDIF
RETURN <local.r>

[FUNCTION f_crafting_render_materials]
XMFHTMLGUMPCOLOR 175 40 370 20 1044011 0 0 <ddef.dcolor_white>
local.x = 180
DORIGIN 180 45
WHILE !(<isempty <DEF.<ctag0.craft.SKILL>_material_<dlocal.n>_name>>)
DTEXT +35 *20 0480 <DEF.<ctag0.craft.SKILL>_material_<dlocal.n>_name>
BUTTON *0 *0 4005 4007 1 0 <EVAL 5020 + <local.n>>
IF <local.n> > 9
   local.x += 180
   DORIGIN <local.x> 45
ENDIF
local.n ++
ENDWHILE

[FUNCTION f_craft_exceptionalbonus] // ITEM.f_craft_exceptionalbonus <UID>
ref1 = <ARGS>
IF <isweapon>
	local.totalbonus = <min 40,<EVAL 35 + (<ref1.ARMSLORE> / 200)>>
	TAG0.DamageIncrease += <local.totalbonus>
elif <isarmor>
	local.totalbonus = <min 20,<EVAL 15 + (<ref1.ARMSLORE> / 200)>>
	FOR <local.totalbonus>
		DORAND 5
			TAG0.ResPhysical ++
			TAG0.ResFire ++
			TAG0.ResCold ++
			TAG0.ResEnergy ++
			TAG0.ResPoison ++
		ENDDO
	ENDFOR
elif <TAG0.UsesRemaining>
	local.totalbonus = <min 40,<EVAL 35 + (<ref1.ARMSLORE> / 200)>> // FIXME: couldn't find any information on the actual formula so this is completely made up.
	TAG0.UsesRemaining += <local.totalbonus>
ENDIF

//Blacksmithing

[FUNCTION f_craft_blacksmith_checkforge]
IF ((!<ISNEARTYPE t_forge 3>) || (!<ISNEARTYPE t_anvil 3>))
   CTAG.craft.MESSAGE=<DEF.SCP.craft_msg_smithingneeds>
   RETURN 1
ENDIF
RETURN 0

[FUNCTION f_craft_blacksmith_exceptionalbonus]
REF5=<ARGS>
NAME=Exceptional <NAME>
IF (<ISWEAPON>)
   TAG0.damageincrease += <EVAL 35 + (<ref5.ARMSLORE> / 200)>
ELIF (<ISARMOR>)
   modar += <EVAL (<ARMOR.high> * 15) / 100>
ENDIF


[FUNCTION f_craft_blacksmith_repair]
IF (!<ISNEARTYPE t_forge 3>) || (!<ISNEARTYPE t_anvil 3>)
   CTAG.craft.MESSAGE=<DEF.SCP.craft_msg_smithrepairneeds>
   f_resenddialog d_craft_menu
   RETURN 1
ENDIF
TARGETF f_craft_blacksmith_repair_targ
SYSMESSAGE <DEF.SCP.craft_repair_targ>

//TODO: consume resource if fail to
[FUNCTION f_craft_blacksmith_repair_targ]
LOCAL.Max = <ARGO.MORE1H>
LOCAL.Res = <STRARG <ARGO.RESOURCES.1.VALUE>>
LOCAL.ResID = <STRARG <ARGO.RESOURCES.1.KEY>>
LOCAL.Total = <LOCAL.max>/<LOCAL.res>
LOCAL.ToRepair = <ARGO.MORE1H> - <ARGO.MORE1L>
LOCAL.IngotNeeded = <LOCAL.ToRepair>/<LOCAL.Total>

//override res id if exist
IF (!<ISEMPTY <ARGO.MATERIAL>>)
    LOCAL.ResID = <ARGO.MATERIAL>
ENDIF

IF (!<ISNEARTYPE t_forge 3>) || (!<ISNEARTYPE t_anvil 3>)
   CTAG.craft.MESSAGE=<DEF.SCP.craft_msg_smithrepairneeds>
   LOCAL.FailedRequirement=1
// ELIF (!<ARGO.ISTEVENT.t_equipitem>)
   // CTAG.Craft.Message=<DEF.SCP.craft_repair_notitem>
   // LOCAL.FailedRequirement=1
ELIF (<ARGO.SKILLMAKE.1.KEY>!=<SRC.CTAG0.craft.SKILL>)
   CTAG.Craft.MESSAGE=<DEF.SCP.craft_repair_wrongskill>
   LOCAL.FailedRequirement=1
ELIF (<ARGO.CONT> != <FINDLAYER(layer_pack).UID>)
   CTAG.Craft.MESSAGE=<DEF.SCP.craft_repair_inpack>
   LOCAL.FailedRequirement=1
ELIF ((<ARGO.SKILLMAKE.1.KEY> != skill_blacksmith) || !((<ARGO.TYPE> == t_armor) || (<ARGO.TYPE> == t_shield) || (<ARGO.ISWEAPON>)))
   CTAG.Craft.MESSAGE=<DEF.SCP.craft_repair_wrongskill>
   LOCAL.FailedRequirement=1
ELIF (<ARGO.MORE1L> >= <ARGO.MORE1H>)
   CTAG.Craft.MESSAGE=<DEF.SCP.craft_repair_fullrepair>
   LOCAL.FailedRequirement=1
ELIF (<ARGO.MORE1H> <= 0)
   CTAG.Craft.MESSAGE=<DEF.SCP.craft_repair_cannot>
   LOCAL.FailedRequirement=1
ENDIF

IF (<LOCAL.FailedRequirement>)
   f_resenddialog d_craft_menu
   RETURN 1
ENDIF

IF !(<SRC.RESTEST <DLOCAL.IngotNeeded> <LOCAL.ResID>>)
	CTAG.Craft.MESSAGE=You don't have enough ingots
    f_resenddialog d_craft_menu
	RETURN 1
ENDIF

f_loopanim 11,3,1
f_loopsound 42,3,1
LOCAL.difficulty=<EVAL ((((<ARGO.MORE1H> - <ARGO.MORE1L>) * 1250) / <ARGO.MORE1H>) - 250) / 10>
LOCAL.decrease=<EVAL 30 - (<Blacksmithing> / 33)>
IF (<LOCAL.decrease> < 0)
   LOCAL.decrease=0
ENDIF
//LOCAL.decrease += <EVAL {2 4}>
ARGO.MORE1H=<EVAL (<ARGO.MORE1H> * (100 - <LOCAL.decrease>)) / 100>
IF (<LOCAL.difficulty> > <R100>)
   CTAG.craft.MESSAGE=<DEF.SCP.craft_repair_fail>
   f_resenddialog d_craft_menu
   RETURN 1
ELSE
   ARGO.MORE1L=<ARGO.MORE1H>
   CTAG.craft.MESSAGE=<DEF.SCP.craft_repair_success>
   SRC.CONSUME <DLOCAL.IngotNeeded> <LOCAL.ResID>
   f_resenddialog d_craft_menu
ENDIF
RESENDTOOLTIP


[FUNCTION f_craft_blacksmith_smelt]
IF (!<ISNEARTYPE t_forge 3>)
   CTAG.craft.MESSAGE=<DEF.SCP.craft_msg_smithsmeltneeds>
   f_resenddialog d_craft_menu
   RETURN 1
ENDIF
TARGETF f_craft_blacksmith_smelt_targ
SYSMESSAGE <DEF.SCP.craft_smelt_targ>

[FUNCTION f_craft_blacksmith_smelt_targ]
IF (<ARGO.TOPOBJ> != <SRC>)
   SRC.SYSMESSAGE <DEF.scp.craft_smelt_notinpack>
	RETURN 1
ELIF (!<ISNEARTYPE t_forge 3>)
   CTAG.craft.MESSAGE=<DEF.SCP.craft_msg_smithsmeltneeds>
   RETURN 1
ELIF !<ARGO.ISITEM>
   SYSMESSAGE <DEF.SCP.craft_smelt_notitem>
   RETURN 1
ELIF (<ARGO.TYPE>==t_ore)
    dclick <ARGO.UID>
    RETURN 1
ELIF (<ARGO.TYPE>==t_clothing) || (<ARGO.ATTR>&ATTR_MAGIC) || !((<ARGO.ISARMOR>) || (<ARGO.ISWEAPON>) || STRMATCH("*ingot*","<ARGO.RESOURCES.1>"))
   SYSMESSAGE <DEF.SCP.craft_smelt_notsmeltable>
   RETURN 1
ELSE
    LOCAL.RESOURCE = <ARGO.RESOURCES.1.KEY>
    //check if exist MATERIAL and change the resource if exist
    IF (!<ISEMPTY <ARGO.MATERIAL>>)
        LOCAL.RESOURCE = <ARGO.MATERIAL>
    ENDIF
    LOCAL.AMOUNT=<MULDIV <STRARG <ARGO.RESOURCES.1>>,60,100>
    SERV.NEWITEM=<LOCAL.RESOURCE>,<dLOCAL.AMOUNT>
    NEW.CONT=<ARGO.CONT>
    ARGO.REMOVE
    SYSMESSAGE <DEF.SCP.craft_smelt_success>
    SRC.f_fireforge
    f_resenddialog d_craft_menu
ENDIF

[FUNCTION f_craft_cooking_checkfire]
IF (<SERV.ITEMDEF.<STREAT <SERV.ITEMDEF.<ARGS>.RESOURCES>>.TYPE> == t_meat_raw) || (<SERV.ITEMDEF.<STREAT <SERV.ITEMDEF.<ARGS>.RESOURCES>>.TYPE> == t_food_raw)
   IF !((<ISNEARTYPE t_fire 3>) || (<ISNEARTYPE t_forge 3>) || (<ISNEARTYPE t_campfire 3>))
      CTAG.craft.MESSAGE=<DEF.cooking_check_notice>
      RETURN 1
   ENDIF
ENDIF
RETURN 0

[FUNCTION f_check_recipe] //Verification if player have the recipe of the item
//Parameter: ARGS is the ID of the item  ex i_potion_refresh
//Return 1 mean fabrication can't be DONE
IF (<TAG0.recipe.<ARGS>>)
   RETURN 0
ELSE
   RETURN 1
ENDIF


[EOF]
